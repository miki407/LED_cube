boolean cube [10][10][10][2];
int Data = 14;
int Clock_ = 12;
int Latch = 16;
boolean letter_a [10][10] = {{0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1}
};

boolean letter_b [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_c [10][10] = {{0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_d [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_e [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
};

boolean letter_f [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0}
};

boolean letter_g [10][10] = {{0, 0, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 1, 1, 1, 1, 1, 1},
  {1, 1, 0, 0, 1, 1, 1, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 0, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 1, 1, 1, 1, 1, 1, 1, 1}
};

boolean letter_h [10][10] = {{1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1}
};

boolean letter_i [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
};

boolean letter_j [10][10] = {{0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_k [10][10] = {{1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 1, 1, 1, 0},
  {1, 1, 0, 0, 0, 1, 1, 1, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
  {1, 1, 0, 0, 0, 1, 1, 1, 0, 0},
  {1, 1, 0, 0, 0, 0, 1, 1, 1, 0},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1}
};

boolean letter_l [10][10] = {{1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
};

boolean letter_m [10][10] = {{1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 1, 0, 0, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 0, 1, 1, 1, 1, 0, 1, 1},
  {1, 1, 0, 0, 1, 1, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1}
};

boolean letter_n [10][10] = {{1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 1, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 1, 1, 0, 0, 0, 1, 1},
  {1, 1, 0, 1, 1, 1, 0, 0, 1, 1},
  {1, 1, 0, 0, 1, 1, 1, 0, 1, 1},
  {1, 1, 0, 0, 0, 1, 1, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 1, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1}
};

boolean letter_o [10][10] = {{0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_p [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0}
};

boolean letter_q [10][10] = {{0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 1, 1, 1, 0},
  {1, 1, 1, 0, 0, 1, 1, 1, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 1, 1, 1, 1, 1, 1, 1, 1}
};

boolean letter_r [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1}
};

boolean letter_s [10][10] = {{0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 1, 0, 0, 0, 0, 0, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_t [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0}
};

boolean letter_u [10][10] = {{1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_v [10][10] = {{1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {0, 1, 1, 1, 0, 0, 1, 1, 1, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 0, 0, 1, 1, 1, 1, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0}
};

boolean letter_w [10][10] = {{1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 1, 1, 0, 0, 1, 1},
  {1, 1, 0, 1, 1, 1, 1, 0, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 0, 0, 1, 1, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1}
};

boolean letter_x [10][10] = {{1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {0, 1, 1, 1, 0, 0, 1, 1, 1, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 0, 0, 1, 1, 1, 1, 0, 0, 0},
  {0, 0, 0, 1, 1, 1, 1, 0, 0, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 1, 1, 1, 0, 0, 1, 1, 1, 0},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1}
};

boolean letter_y [10][10] = {{1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {0, 1, 1, 1, 0, 0, 1, 1, 1, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 0, 0, 1, 1, 1, 1, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0}
};

boolean letter_z [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 1, 1, 1, 0},
  {0, 0, 0, 0, 0, 1, 1, 1, 0, 0},
  {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
  {0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
  {0, 0, 1, 1, 1, 0, 0, 0, 0, 0},
  {0, 1, 1, 1, 0, 0, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
};

boolean letter_sp [10][10] = {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
};

boolean letter_1 [10][10] = {{1, 1, 1, 1, 1, 1, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
};

boolean letter_2 [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {0, 0, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {1, 1, 1, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
};

boolean letter_3 [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {0, 0, 0, 0, 1, 1, 1, 1, 1, 0},
  {0, 0, 0, 0, 1, 1, 1, 1, 1, 0},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_4 [10][10] = {{1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1}
};

boolean letter_5 [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_6 [10][10] = {{0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 0, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_7 [10][10] = {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 1, 1, 1, 0},
  {0, 0, 0, 0, 0, 1, 1, 1, 0, 0},
  {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
  {0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
  {0, 0, 1, 1, 1, 0, 0, 0, 0, 0},
  {0, 1, 1, 1, 0, 0, 0, 0, 0, 0}
};

boolean letter_8 [10][10] = {{0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_9 [10][10] = {{0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 0, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0, 0, 1, 1}
};

boolean letter_0 [10][10] = {{0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 0, 0, 0, 0, 0, 0, 1, 1},
  {1, 1, 1, 0, 0, 0, 0, 1, 1, 1},
  {0, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 0, 0}
};

boolean letter_ily [10][10] = {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 1, 1, 0, 1, 1, 0, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  {0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 0, 1, 1, 1, 1, 1, 0, 0, 0},
  {0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 0, 0, 0, 0, 0}
};


int text_size = 27;
char text[27] = "tech master event @";
void setup() {
  // put your setup code here, to run once:
  pinMode(Data, OUTPUT);
  pinMode(Clock_, OUTPUT);
  pinMode(Latch, OUTPUT);
  //  Serial.begin(115200u);
}

void loop() {
  for (int letter = 0; letter < text_size; letter++) {

    for (int steps = 1; steps < 10; steps++) {
      for (int x = 0; x < 10; x++) {
        for (int y = 0; y < 10; y++) {
          for (int z = steps; z < steps + 1; z++) {
            if (text[letter] == 'a') {
              cube[x][y][z - 1][1] = letter_a[9 - x][9 - y];
              cube[x][y][z][0] = letter_a[9 - x][9 - y];
            }
            else if (text[letter] == 'b') {
              cube[x][y][z - 1][1] = letter_b[9 - x][9 - y];
              cube[x][y][z][0] = letter_b[9 - x][9 - y];
            }
            else if (text[letter] == 'c') {
              cube[x][y][z - 1][1] = letter_c[9 - x][9 - y];
              cube[x][y][z][0] = letter_c[9 - x][9 - y];
            }
            else if (text[letter] == 'd') {
              cube[x][y][z - 1][1] = letter_d[9 - x][9 - y];
              cube[x][y][z][0] = letter_d[9 - x][9 - y];
            }
            else if (text[letter] == 'e') {
              cube[x][y][z - 1][1] = letter_e[9 - x][9 - y];
              cube[x][y][z][0] = letter_e[9 - x][9 - y];
            }
            else if (text[letter] == 'f') {
              cube[x][y][z - 1][1] = letter_f[9 - x][9 - y];
              cube[x][y][z][0] = letter_f[9 - x][9 - y];
            }
            else if (text[letter] == 'g') {
              cube[x][y][z - 1][1] = letter_g[9 - x][9 - y];
              cube[x][y][z][0] = letter_g[9 - x][9 - y];
            }
            else if (text[letter] == 'h') {
              cube[x][y][z - 1][1] = letter_h[9 - x][9 - y];
              cube[x][y][z][0] = letter_h[9 - x][9 - y];
            }
            else if (text[letter] == 'i') {
              cube[x][y][z - 1][1] = letter_i[9 - x][9 - y];
              cube[x][y][z][0] = letter_i[9 - x][9 - y];
            }
            else if (text[letter] == 'j') {
              cube[x][y][z - 1][1] = letter_j[9 - x][9 - y];
              cube[x][y][z][0] = letter_j[9 - x][9 - y];
            }
            else if (text[letter] == 'k') {
              cube[x][y][z - 1][1] = letter_k[9 - x][9 - y];
              cube[x][y][z][0] = letter_k[9 - x][9 - y];
            }
            else if (text[letter] == 'l') {
              cube[x][y][z - 1][1] = letter_l[9 - x][9 - y];
              cube[x][y][z][0] = letter_l[9 - x][9 - y];
            }
            else if (text[letter] == 'm') {
              cube[x][y][z - 1][1] = letter_m[9 - x][9 - y];
              cube[x][y][z][0] = letter_m[9 - x][9 - y];
            }
            else if (text[letter] == 'n') {
              cube[x][y][z - 1][1] = letter_n[9 - x][9 - y];
              cube[x][y][z][0] = letter_n[9 - x][9 - y];
            }
            else if (text[letter] == 'o') {
              cube[x][y][z - 1][1] = letter_o[9 - x][9 - y];
              cube[x][y][z][0] = letter_o[9 - x][9 - y];
            }
            else if (text[letter] == 'p') {
              cube[x][y][z - 1][1] = letter_p[9 - x][9 - y];
              cube[x][y][z][0] = letter_p[9 - x][9 - y];
            }
            else if (text[letter] == 'q') {
              cube[x][y][z - 1][1] = letter_q[9 - x][9 - y];
              cube[x][y][z][0] = letter_q[9 - x][9 - y];
            }
            else if (text[letter] == 'r') {
              cube[x][y][z - 1][1] = letter_r[9 - x][9 - y];
              cube[x][y][z][0] = letter_r[9 - x][9 - y];
            }
            else if (text[letter] == 's') {
              cube[x][y][z - 1][1] = letter_s[9 - x][9 - y];
              cube[x][y][z][0] = letter_s[9 - x][9 - y];
            }
            else if (text[letter] == 't') {
              cube[x][y][z - 1][1] = letter_t[9 - x][9 - y];
              cube[x][y][z][0] = letter_t[9 - x][9 - y];
            }
            else if (text[letter] == 'u') {
              cube[x][y][z - 1][1] = letter_u[9 - x][9 - y];
              cube[x][y][z][0] = letter_u[9 - x][9 - y];
            }
            else if (text[letter] == 'v') {
              cube[x][y][z - 1][1] = letter_v[9 - x][9 - y];
              cube[x][y][z][0] = letter_v[9 - x][9 - y];
            }
            else if (text[letter] == 'w') {
              cube[x][y][z - 1][1] = letter_w[9 - x][9 - y];
              cube[x][y][z][0] = letter_w[9 - x][9 - y];
            }
            else if (text[letter] == 'x') {
              cube[x][y][z - 1][1] = letter_x[9 - x][9 - y];
              cube[x][y][z][0] = letter_x[9 - x][9 - y];
            }
            else if (text[letter] == 'y') {
              cube[x][y][z - 1][1] = letter_y[9 - x][9 - y];
              cube[x][y][z][0] = letter_y[9 - x][9 - y];
            }
            else if (text[letter] == 'z') {
              cube[x][y][z - 1][1] = letter_z[9 - x][9 - y];
              cube[x][y][z][0] = letter_z[9 - x][9 - y];
            }
            else if (text[letter] == ' ') {
              cube[x][y][z - 1][1] = letter_sp[9 - x][9 - y];
              cube[x][y][z][0] = letter_sp[9 - x][9 - y];
            }
            else if (text[letter] == '1') {
              cube[x][y][z - 1][1] = letter_1[9 - x][9 - y];
              cube[x][y][z][0] = letter_1[9 - x][9 - y];
            }
            else if (text[letter] == '2') {
              cube[x][y][z - 1][1] = letter_2[9 - x][9 - y];
              cube[x][y][z][0] = letter_2[9 - x][9 - y];
            }
            else if (text[letter] == '3') {
              cube[x][y][z - 1][1] = letter_3[9 - x][9 - y];
              cube[x][y][z][0] = letter_3[9 - x][9 - y];
            }
            else if (text[letter] == '4') {
              cube[x][y][z - 1][1] = letter_4[9 - x][9 - y];
              cube[x][y][z][0] = letter_4[9 - x][9 - y];
            }
            else if (text[letter] == '5') {
              cube[x][y][z - 1][1] = letter_5[9 - x][9 - y];
              cube[x][y][z][0] = letter_5[9 - x][9 - y];
            }
            else if (text[letter] == '6') {
              cube[x][y][z - 1][1] = letter_6[9 - x][9 - y];
              cube[x][y][z][0] = letter_6[9 - x][9 - y];
            }
            else if (text[letter] == '7') {
              cube[x][y][z - 1][1] = letter_7[9 - x][9 - y];
              cube[x][y][z][0] = letter_7[9 - x][9 - y];
            }
            else if (text[letter] == '8') {
              cube[x][y][z - 1][1] = letter_8[9 - x][9 - y];
              cube[x][y][z][0] = letter_8[9 - x][9 - y];
            }
            else if (text[letter] == '9') {
              cube[x][y][z - 1][1] = letter_9[9 - x][9 - y];
              cube[x][y][z][0] = letter_9[9 - x][9 - y];
            }
            else if (text[letter] == '0') {
              cube[x][y][z - 1][1] = letter_0[9 - x][9 - y];
              cube[x][y][z][0] = letter_0[9 - x][9 - y];
            }
            else if (text[letter] == '@') {
              cube[x][y][z - 1][1] = letter_ily[9 - x][9 - y];
              cube[x][y][z][0] = letter_ily[9 - x][9 - y];
            }
          }
        }
      }
      for ( int n = 0; n < 5; n++) {
        output();
        yield();

      }
      if (steps == 9) {
          for ( int n = 0; n < 30; n++) {
            output();
            yield();
    
          }
      }
      //delay(1000);
      for (int c = 0; c < 2; c++) {
        for (int x = 0; x  < 10; x++) {
          for (int y = 0; y < 10; y++) {
            for (int z = 0; z < 10; z++) {

              //      cube [x][y][z][c] = 1;

              //      output();

              cube [x][y][z][c] = 0;
              //      yield();
            }
          }
        }
      }
      /*for (int c = 0; c < 2; c++) {
        for (int x = 0; x  < 10; x++) {
          for (int y = 0; y < 10; y++) {
            for (int z = 0; z < 10; z++) {

              cube [x][y][z][c] = 1;

              output();

              cube [x][y][z][c] = 0;
              yield();
            }
          }
        }
        } */
    }
  }
}
void output() {
  for (int x_ = 0 ; x_ < 10; x_++) {
    for (int c_ = 0; c_ < 2; c_++) {
      for ( int y_ = 0; y_ < 10; y_++) {

        for (int n = 0; n < 6; n++) {
          digitalWrite(Clock_, 1);
          digitalWrite(Clock_, 0);
        }

        for (int z_ = 0; z_ < 10; z_++) {
          digitalWrite(Data, cube[x_][y_][z_][c_]);
          digitalWrite(Clock_, 1);
          digitalWrite(Clock_, 0);
        }

      }
    }

    for (int n = 0; n < 6; n++) {
      digitalWrite(Clock_, 1);
      digitalWrite(Clock_, 0);
    }
    for (int n = 0; n < 10; n++) {
      if ( n == x_ ) {
        digitalWrite(Data, 1);
      }
      else {
        digitalWrite(Data, 0);
      }
      digitalWrite(Clock_, 1);
      digitalWrite(Clock_, 0);
      digitalWrite(Data, 0);
    }
    digitalWrite(Latch, 1);
    digitalWrite(Latch, 0);
  }

}
